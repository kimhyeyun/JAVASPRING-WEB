Index: JavaSpring/스프링입문/restaurant/build/reports/tests/test/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JavaSpring/스프링입문/restaurant/build/reports/tests/test/index.html b/JavaSpring/스프링입문/restaurant/build/reports/tests/test/index.html
new file mode 100644
--- /dev/null	(date 1630328620267)
+++ b/JavaSpring/스프링입문/restaurant/build/reports/tests/test/index.html	(date 1630328620267)
@@ -0,0 +1,133 @@
+<!DOCTYPE html>
+<html>
+<head>
+<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
+<meta http-equiv="x-ua-compatible" content="IE=edge"/>
+<title>Test results - Test Summary</title>
+<link href="css/base-style.css" rel="stylesheet" type="text/css"/>
+<link href="css/style.css" rel="stylesheet" type="text/css"/>
+<script src="js/report.js" type="text/javascript"></script>
+</head>
+<body>
+<div id="content">
+<h1>Test Summary</h1>
+<div id="summary">
+<table>
+<tr>
+<td>
+<div class="summaryGroup">
+<table>
+<tr>
+<td>
+<div class="infoBox" id="tests">
+<div class="counter">1</div>
+<p>tests</p>
+</div>
+</td>
+<td>
+<div class="infoBox" id="failures">
+<div class="counter">0</div>
+<p>failures</p>
+</div>
+</td>
+<td>
+<div class="infoBox" id="ignored">
+<div class="counter">0</div>
+<p>ignored</p>
+</div>
+</td>
+<td>
+<div class="infoBox" id="duration">
+<div class="counter">1.374s</div>
+<p>duration</p>
+</div>
+</td>
+</tr>
+</table>
+</div>
+</td>
+<td>
+<div class="infoBox success" id="successRate">
+<div class="percent">100%</div>
+<p>successful</p>
+</div>
+</td>
+</tr>
+</table>
+</div>
+<div id="tabs">
+<ul class="tabLinks">
+<li>
+<a href="#tab0">Packages</a>
+</li>
+<li>
+<a href="#tab1">Classes</a>
+</li>
+</ul>
+<div id="tab0" class="tab">
+<h2>Packages</h2>
+<table>
+<thead>
+<tr>
+<th>Package</th>
+<th>Tests</th>
+<th>Failures</th>
+<th>Ignored</th>
+<th>Duration</th>
+<th>Success rate</th>
+</tr>
+</thead>
+<tbody>
+<tr>
+<td class="success">
+<a href="packages/com.example.restaurant.naver.html">com.example.restaurant.naver</a>
+</td>
+<td>1</td>
+<td>0</td>
+<td>0</td>
+<td>1.374s</td>
+<td class="success">100%</td>
+</tr>
+</tbody>
+</table>
+</div>
+<div id="tab1" class="tab">
+<h2>Classes</h2>
+<table>
+<thead>
+<tr>
+<th>Class</th>
+<th>Tests</th>
+<th>Failures</th>
+<th>Ignored</th>
+<th>Duration</th>
+<th>Success rate</th>
+</tr>
+</thead>
+<tbody>
+<tr>
+<td class="success">
+<a href="classes/com.example.restaurant.naver.NaverClientTest.html">com.example.restaurant.naver.NaverClientTest</a>
+</td>
+<td>1</td>
+<td>0</td>
+<td>0</td>
+<td>1.374s</td>
+<td class="success">100%</td>
+</tr>
+</tbody>
+</table>
+</div>
+</div>
+<div id="footer">
+<p>
+<div>
+<label class="hidden" id="label-for-line-wrapping-toggle" for="line-wrapping-toggle">Wrap lines
+<input id="line-wrapping-toggle" type="checkbox" autocomplete="off"/>
+</label>
+</div>Generated by 
+<a href="http://www.gradle.org">Gradle 7.1.1</a> at 2021. 8. 30. 오후 10:03:40</p>
+</div>
+</div>
+</body>
+</html>
Index: JavaSpring/스프링입문/restaurant/build/reports/tests/test/css/base-style.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JavaSpring/스프링입문/restaurant/build/reports/tests/test/css/base-style.css b/JavaSpring/스프링입문/restaurant/build/reports/tests/test/css/base-style.css
new file mode 100644
--- /dev/null	(date 1630325638063)
+++ b/JavaSpring/스프링입문/restaurant/build/reports/tests/test/css/base-style.css	(date 1630325638063)
@@ -0,0 +1,179 @@
+
+body {
+    margin: 0;
+    padding: 0;
+    font-family: sans-serif;
+    font-size: 12pt;
+}
+
+body, a, a:visited {
+    color: #303030;
+}
+
+#content {
+    padding-left: 50px;
+    padding-right: 50px;
+    padding-top: 30px;
+    padding-bottom: 30px;
+}
+
+#content h1 {
+    font-size: 160%;
+    margin-bottom: 10px;
+}
+
+#footer {
+    margin-top: 100px;
+    font-size: 80%;
+    white-space: nowrap;
+}
+
+#footer, #footer a {
+    color: #a0a0a0;
+}
+
+#line-wrapping-toggle {
+    vertical-align: middle;
+}
+
+#label-for-line-wrapping-toggle {
+    vertical-align: middle;
+}
+
+ul {
+    margin-left: 0;
+}
+
+h1, h2, h3 {
+    white-space: nowrap;
+}
+
+h2 {
+    font-size: 120%;
+}
+
+ul.tabLinks {
+    padding-left: 0;
+    padding-top: 10px;
+    padding-bottom: 10px;
+    overflow: auto;
+    min-width: 800px;
+    width: auto !important;
+    width: 800px;
+}
+
+ul.tabLinks li {
+    float: left;
+    height: 100%;
+    list-style: none;
+    padding-left: 10px;
+    padding-right: 10px;
+    padding-top: 5px;
+    padding-bottom: 5px;
+    margin-bottom: 0;
+    -moz-border-radius: 7px;
+    border-radius: 7px;
+    margin-right: 25px;
+    border: solid 1px #d4d4d4;
+    background-color: #f0f0f0;
+}
+
+ul.tabLinks li:hover {
+    background-color: #fafafa;
+}
+
+ul.tabLinks li.selected {
+    background-color: #c5f0f5;
+    border-color: #c5f0f5;
+}
+
+ul.tabLinks a {
+    font-size: 120%;
+    display: block;
+    outline: none;
+    text-decoration: none;
+    margin: 0;
+    padding: 0;
+}
+
+ul.tabLinks li h2 {
+    margin: 0;
+    padding: 0;
+}
+
+div.tab {
+}
+
+div.selected {
+    display: block;
+}
+
+div.deselected {
+    display: none;
+}
+
+div.tab table {
+    min-width: 350px;
+    width: auto !important;
+    width: 350px;
+    border-collapse: collapse;
+}
+
+div.tab th, div.tab table {
+    border-bottom: solid #d0d0d0 1px;
+}
+
+div.tab th {
+    text-align: left;
+    white-space: nowrap;
+    padding-left: 6em;
+}
+
+div.tab th:first-child {
+    padding-left: 0;
+}
+
+div.tab td {
+    white-space: nowrap;
+    padding-left: 6em;
+    padding-top: 5px;
+    padding-bottom: 5px;
+}
+
+div.tab td:first-child {
+    padding-left: 0;
+}
+
+div.tab td.numeric, div.tab th.numeric {
+    text-align: right;
+}
+
+span.code {
+    display: inline-block;
+    margin-top: 0em;
+    margin-bottom: 1em;
+}
+
+span.code pre {
+    font-size: 11pt;
+    padding-top: 10px;
+    padding-bottom: 10px;
+    padding-left: 10px;
+    padding-right: 10px;
+    margin: 0;
+    background-color: #f7f7f7;
+    border: solid 1px #d0d0d0;
+    min-width: 700px;
+    width: auto !important;
+    width: 700px;
+}
+
+span.wrapped pre {
+    word-wrap: break-word;
+    white-space: pre-wrap;
+    word-break: break-all;
+}
+
+label.hidden {
+    display: none;
+}
\ No newline at end of file
Index: JavaSpring/스프링입문/restaurant/build/reports/tests/test/css/style.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JavaSpring/스프링입문/restaurant/build/reports/tests/test/css/style.css b/JavaSpring/스프링입문/restaurant/build/reports/tests/test/css/style.css
new file mode 100644
--- /dev/null	(date 1630325638065)
+++ b/JavaSpring/스프링입문/restaurant/build/reports/tests/test/css/style.css	(date 1630325638065)
@@ -0,0 +1,84 @@
+
+#summary {
+    margin-top: 30px;
+    margin-bottom: 40px;
+}
+
+#summary table {
+    border-collapse: collapse;
+}
+
+#summary td {
+    vertical-align: top;
+}
+
+.breadcrumbs, .breadcrumbs a {
+    color: #606060;
+}
+
+.infoBox {
+    width: 110px;
+    padding-top: 15px;
+    padding-bottom: 15px;
+    text-align: center;
+}
+
+.infoBox p {
+    margin: 0;
+}
+
+.counter, .percent {
+    font-size: 120%;
+    font-weight: bold;
+    margin-bottom: 8px;
+}
+
+#duration {
+    width: 125px;
+}
+
+#successRate, .summaryGroup {
+    border: solid 2px #d0d0d0;
+    -moz-border-radius: 10px;
+    border-radius: 10px;
+}
+
+#successRate {
+    width: 140px;
+    margin-left: 35px;
+}
+
+#successRate .percent {
+    font-size: 180%;
+}
+
+.success, .success a {
+    color: #008000;
+}
+
+div.success, #successRate.success {
+    background-color: #bbd9bb;
+    border-color: #008000;
+}
+
+.failures, .failures a {
+    color: #b60808;
+}
+
+.skipped, .skipped a {
+    color: #c09853;
+}
+
+div.failures, #successRate.failures {
+    background-color: #ecdada;
+    border-color: #b60808;
+}
+
+ul.linkList {
+    padding-left: 0;
+}
+
+ul.linkList li {
+    list-style: none;
+    margin-bottom: 5px;
+}
Index: JavaSpring/스프링입문/restaurant/build/reports/tests/test/js/report.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JavaSpring/스프링입문/restaurant/build/reports/tests/test/js/report.js b/JavaSpring/스프링입문/restaurant/build/reports/tests/test/js/report.js
new file mode 100644
--- /dev/null	(date 1630325638064)
+++ b/JavaSpring/스프링입문/restaurant/build/reports/tests/test/js/report.js	(date 1630325638064)
@@ -0,0 +1,194 @@
+(function (window, document) {
+    "use strict";
+
+    var tabs = {};
+
+    function changeElementClass(element, classValue) {
+        if (element.getAttribute("className")) {
+            element.setAttribute("className", classValue);
+        } else {
+            element.setAttribute("class", classValue);
+        }
+    }
+
+    function getClassAttribute(element) {
+        if (element.getAttribute("className")) {
+            return element.getAttribute("className");
+        } else {
+            return element.getAttribute("class");
+        }
+    }
+
+    function addClass(element, classValue) {
+        changeElementClass(element, getClassAttribute(element) + " " + classValue);
+    }
+
+    function removeClass(element, classValue) {
+        changeElementClass(element, getClassAttribute(element).replace(classValue, ""));
+    }
+
+    function initTabs() {
+        var container = document.getElementById("tabs");
+
+        tabs.tabs = findTabs(container);
+        tabs.titles = findTitles(tabs.tabs);
+        tabs.headers = findHeaders(container);
+        tabs.select = select;
+        tabs.deselectAll = deselectAll;
+        tabs.select(0);
+
+        return true;
+    }
+
+    function getCheckBox() {
+        return document.getElementById("line-wrapping-toggle");
+    }
+
+    function getLabelForCheckBox() {
+        return document.getElementById("label-for-line-wrapping-toggle");
+    }
+
+    function findCodeBlocks() {
+        var spans = document.getElementById("tabs").getElementsByTagName("span");
+        var codeBlocks = [];
+        for (var i = 0; i < spans.length; ++i) {
+            if (spans[i].className.indexOf("code") >= 0) {
+                codeBlocks.push(spans[i]);
+            }
+        }
+        return codeBlocks;
+    }
+
+    function forAllCodeBlocks(operation) {
+        var codeBlocks = findCodeBlocks();
+
+        for (var i = 0; i < codeBlocks.length; ++i) {
+            operation(codeBlocks[i], "wrapped");
+        }
+    }
+
+    function toggleLineWrapping() {
+        var checkBox = getCheckBox();
+
+        if (checkBox.checked) {
+            forAllCodeBlocks(addClass);
+        } else {
+            forAllCodeBlocks(removeClass);
+        }
+    }
+
+    function initControls() {
+        if (findCodeBlocks().length > 0) {
+            var checkBox = getCheckBox();
+            var label = getLabelForCheckBox();
+
+            checkBox.onclick = toggleLineWrapping;
+            checkBox.checked = false;
+
+            removeClass(label, "hidden");
+         }
+    }
+
+    function switchTab() {
+        var id = this.id.substr(1);
+
+        for (var i = 0; i < tabs.tabs.length; i++) {
+            if (tabs.tabs[i].id === id) {
+                tabs.select(i);
+                break;
+            }
+        }
+
+        return false;
+    }
+
+    function select(i) {
+        this.deselectAll();
+
+        changeElementClass(this.tabs[i], "tab selected");
+        changeElementClass(this.headers[i], "selected");
+
+        while (this.headers[i].firstChild) {
+            this.headers[i].removeChild(this.headers[i].firstChild);
+        }
+
+        var h2 = document.createElement("H2");
+
+        h2.appendChild(document.createTextNode(this.titles[i]));
+        this.headers[i].appendChild(h2);
+    }
+
+    function deselectAll() {
+        for (var i = 0; i < this.tabs.length; i++) {
+            changeElementClass(this.tabs[i], "tab deselected");
+            changeElementClass(this.headers[i], "deselected");
+
+            while (this.headers[i].firstChild) {
+                this.headers[i].removeChild(this.headers[i].firstChild);
+            }
+
+            var a = document.createElement("A");
+
+            a.setAttribute("id", "ltab" + i);
+            a.setAttribute("href", "#tab" + i);
+            a.onclick = switchTab;
+            a.appendChild(document.createTextNode(this.titles[i]));
+
+            this.headers[i].appendChild(a);
+        }
+    }
+
+    function findTabs(container) {
+        return findChildElements(container, "DIV", "tab");
+    }
+
+    function findHeaders(container) {
+        var owner = findChildElements(container, "UL", "tabLinks");
+        return findChildElements(owner[0], "LI", null);
+    }
+
+    function findTitles(tabs) {
+        var titles = [];
+
+        for (var i = 0; i < tabs.length; i++) {
+            var tab = tabs[i];
+            var header = findChildElements(tab, "H2", null)[0];
+
+            header.parentNode.removeChild(header);
+
+            if (header.innerText) {
+                titles.push(header.innerText);
+            } else {
+                titles.push(header.textContent);
+            }
+        }
+
+        return titles;
+    }
+
+    function findChildElements(container, name, targetClass) {
+        var elements = [];
+        var children = container.childNodes;
+
+        for (var i = 0; i < children.length; i++) {
+            var child = children.item(i);
+
+            if (child.nodeType === 1 && child.nodeName === name) {
+                if (targetClass && child.className.indexOf(targetClass) < 0) {
+                    continue;
+                }
+
+                elements.push(child);
+            }
+        }
+
+        return elements;
+    }
+
+    // Entry point.
+
+    window.onload = function() {
+        initTabs();
+        initControls();
+    };
+} (window, window.document));
\ No newline at end of file
Index: JavaSpring/스프링입문/restaurant/build/reports/tests/test/packages/com.example.restaurant.naver.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JavaSpring/스프링입문/restaurant/build/reports/tests/test/packages/com.example.restaurant.naver.html b/JavaSpring/스프링입문/restaurant/build/reports/tests/test/packages/com.example.restaurant.naver.html
new file mode 100644
--- /dev/null	(date 1630328620267)
+++ b/JavaSpring/스프링입문/restaurant/build/reports/tests/test/packages/com.example.restaurant.naver.html	(date 1630328620267)
@@ -0,0 +1,103 @@
+<!DOCTYPE html>
+<html>
+<head>
+<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
+<meta http-equiv="x-ua-compatible" content="IE=edge"/>
+<title>Test results - Package com.example.restaurant.naver</title>
+<link href="../css/base-style.css" rel="stylesheet" type="text/css"/>
+<link href="../css/style.css" rel="stylesheet" type="text/css"/>
+<script src="../js/report.js" type="text/javascript"></script>
+</head>
+<body>
+<div id="content">
+<h1>Package com.example.restaurant.naver</h1>
+<div class="breadcrumbs">
+<a href="../index.html">all</a> &gt; com.example.restaurant.naver</div>
+<div id="summary">
+<table>
+<tr>
+<td>
+<div class="summaryGroup">
+<table>
+<tr>
+<td>
+<div class="infoBox" id="tests">
+<div class="counter">1</div>
+<p>tests</p>
+</div>
+</td>
+<td>
+<div class="infoBox" id="failures">
+<div class="counter">0</div>
+<p>failures</p>
+</div>
+</td>
+<td>
+<div class="infoBox" id="ignored">
+<div class="counter">0</div>
+<p>ignored</p>
+</div>
+</td>
+<td>
+<div class="infoBox" id="duration">
+<div class="counter">1.374s</div>
+<p>duration</p>
+</div>
+</td>
+</tr>
+</table>
+</div>
+</td>
+<td>
+<div class="infoBox success" id="successRate">
+<div class="percent">100%</div>
+<p>successful</p>
+</div>
+</td>
+</tr>
+</table>
+</div>
+<div id="tabs">
+<ul class="tabLinks">
+<li>
+<a href="#tab0">Classes</a>
+</li>
+</ul>
+<div id="tab0" class="tab">
+<h2>Classes</h2>
+<table>
+<thread>
+<tr>
+<th>Class</th>
+<th>Tests</th>
+<th>Failures</th>
+<th>Ignored</th>
+<th>Duration</th>
+<th>Success rate</th>
+</tr>
+</thread>
+<tr>
+<td class="success">
+<a href="../classes/com.example.restaurant.naver.NaverClientTest.html">NaverClientTest</a>
+</td>
+<td>1</td>
+<td>0</td>
+<td>0</td>
+<td>1.374s</td>
+<td class="success">100%</td>
+</tr>
+</table>
+</div>
+</div>
+<div id="footer">
+<p>
+<div>
+<label class="hidden" id="label-for-line-wrapping-toggle" for="line-wrapping-toggle">Wrap lines
+<input id="line-wrapping-toggle" type="checkbox" autocomplete="off"/>
+</label>
+</div>Generated by 
+<a href="http://www.gradle.org">Gradle 7.1.1</a> at 2021. 8. 30. 오후 10:03:40</p>
+</div>
+</div>
+</body>
+</html>
Index: JavaSpring/스프링입문/restaurant/build/reports/tests/test/classes/com.example.restaurant.naver.NaverClientTest.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JavaSpring/스프링입문/restaurant/build/reports/tests/test/classes/com.example.restaurant.naver.NaverClientTest.html b/JavaSpring/스프링입문/restaurant/build/reports/tests/test/classes/com.example.restaurant.naver.NaverClientTest.html
new file mode 100644
--- /dev/null	(date 1630328620269)
+++ b/JavaSpring/스프링입문/restaurant/build/reports/tests/test/classes/com.example.restaurant.naver.NaverClientTest.html	(date 1630328620269)
@@ -0,0 +1,136 @@
+<!DOCTYPE html>
+<html>
+<head>
+<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
+<meta http-equiv="x-ua-compatible" content="IE=edge"/>
+<title>Test results - NaverClientTest</title>
+<link href="../css/base-style.css" rel="stylesheet" type="text/css"/>
+<link href="../css/style.css" rel="stylesheet" type="text/css"/>
+<script src="../js/report.js" type="text/javascript"></script>
+</head>
+<body>
+<div id="content">
+<h1>NaverClientTest</h1>
+<div class="breadcrumbs">
+<a href="../index.html">all</a> &gt; 
+<a href="../packages/com.example.restaurant.naver.html">com.example.restaurant.naver</a> &gt; NaverClientTest</div>
+<div id="summary">
+<table>
+<tr>
+<td>
+<div class="summaryGroup">
+<table>
+<tr>
+<td>
+<div class="infoBox" id="tests">
+<div class="counter">1</div>
+<p>tests</p>
+</div>
+</td>
+<td>
+<div class="infoBox" id="failures">
+<div class="counter">0</div>
+<p>failures</p>
+</div>
+</td>
+<td>
+<div class="infoBox" id="ignored">
+<div class="counter">0</div>
+<p>ignored</p>
+</div>
+</td>
+<td>
+<div class="infoBox" id="duration">
+<div class="counter">1.374s</div>
+<p>duration</p>
+</div>
+</td>
+</tr>
+</table>
+</div>
+</td>
+<td>
+<div class="infoBox success" id="successRate">
+<div class="percent">100%</div>
+<p>successful</p>
+</div>
+</td>
+</tr>
+</table>
+</div>
+<div id="tabs">
+<ul class="tabLinks">
+<li>
+<a href="#tab0">Tests</a>
+</li>
+<li>
+<a href="#tab1">Standard output</a>
+</li>
+</ul>
+<div id="tab0" class="tab">
+<h2>Tests</h2>
+<table>
+<thead>
+<tr>
+<th>Test</th>
+<th>Duration</th>
+<th>Result</th>
+</tr>
+</thead>
+<tr>
+<td class="success">searchImageTest()</td>
+<td class="success">1.374s</td>
+<td class="success">passed</td>
+</tr>
+</table>
+</div>
+<div id="tab1" class="tab">
+<h2>Standard output</h2>
+<span class="code">
+<pre>22:03:34.651 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
+22:03:34.662 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
+22:03:34.713 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [com.example.restaurant.naver.NaverClientTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
+22:03:34.725 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.restaurant.naver.NaverClientTest], using SpringBootContextLoader
+22:03:34.731 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.example.restaurant.naver.NaverClientTest]: class path resource [com/example/restaurant/naver/NaverClientTest-context.xml] does not exist
+22:03:34.732 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.example.restaurant.naver.NaverClientTest]: class path resource [com/example/restaurant/naver/NaverClientTestContext.groovy] does not exist
+22:03:34.733 [Test worker] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.example.restaurant.naver.NaverClientTest]: no resource found for suffixes {-context.xml, Context.groovy}.
+22:03:34.734 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.restaurant.naver.NaverClientTest]: NaverClientTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
+22:03:34.796 [Test worker] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.example.restaurant.naver.NaverClientTest]
+22:03:34.887 [Test worker] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/Users/yun/Desktop/YUN/FastCampus/JavaSpring/스프링입문/restaurant/build/classes/java/main/com/example/restaurant/RestaurantApplication.class]
+22:03:34.890 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.restaurant.RestaurantApplication for test class com.example.restaurant.naver.NaverClientTest
+22:03:35.036 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [com.example.restaurant.naver.NaverClientTest]: using defaults.
+22:03:35.038 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
+22:03:35.049 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.transaction.TransactionalTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [org/springframework/transaction/interceptor/TransactionAttributeSource]
+22:03:35.050 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [org/springframework/transaction/interceptor/TransactionAttribute]
+22:03:35.050 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@369b8d0c, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6d9a3129, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@716a6b5c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7b9946a8, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1100573a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2daf3f4a, org.springframework.test.context.event.EventPublishingTestExecutionListener@fbd9128, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3ea02a71, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2d0a1318, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@798b2c9c, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1adcd654, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@251094dc, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@58ffc1b5]
+22:03:35.054 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@1c502936 testClass = NaverClientTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369d2457 testClass = NaverClientTest, locations = '{}', classes = '{class com.example.restaurant.RestaurantApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@39779f04, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@29bbdb88, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@33868430, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@812fc18, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5a416503, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@3a43e8db], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -&gt; true]], class annotated with @DirtiesContext [false] with mode [null].
+22:03:35.105 [Test worker] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
+
+  .   ____          _            __ _ _
+ /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
+( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
+ \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
+  '  |____| .__|_| |_|_| |_\__, | / / / /
+ =========|_|==============|___/=/_/_/_/
+ :: Spring Boot ::                (v2.5.4)
+
+2021-08-30 22:03:35.579  INFO 55435 --- [    Test worker] c.e.restaurant.naver.NaverClientTest     : Starting NaverClientTest using Java 16.0.1 on YUNs-MacBookPro.local with PID 55435 (started by yun in /Users/yun/Desktop/YUN/FastCampus/JavaSpring/스프링입문/restaurant)
+2021-08-30 22:03:35.586  INFO 55435 --- [    Test worker] c.e.restaurant.naver.NaverClientTest     : No active profile set, falling back to default profiles: default
+2021-08-30 22:03:38.760  INFO 55435 --- [    Test worker] c.e.restaurant.naver.NaverClientTest     : Started NaverClientTest in 3.646 seconds (JVM running for 5.271)
+SearchImageRes(lastBuildDate=Mon, 30 Aug 2021 22:03:40 +0900, total=14141, start=1, display=1, items=[SearchImageRes.SearchImageItem(title=여수 맛집 '은행동 갈비집' 연말 모임, 회식 장소로 인기, link=http://imgnews.naver.net/image/5346/2019/12/20/0000146216_002_20191220155406734.jpg, thumbnail=https://search.pstatic.net/common/?src=http://imgnews.naver.net/image/5346/2019/12/20/0000146216_002_20191220155406734.jpg&amp;type=b150, sizeheight=342, sizewidth=600)])
+</pre>
+</span>
+</div>
+</div>
+<div id="footer">
+<p>
+<div>
+<label class="hidden" id="label-for-line-wrapping-toggle" for="line-wrapping-toggle">Wrap lines
+<input id="line-wrapping-toggle" type="checkbox" autocomplete="off"/>
+</label>
+</div>Generated by 
+<a href="http://www.gradle.org">Gradle 7.1.1</a> at 2021. 8. 30. 오후 10:03:40</p>
+</div>
+</div>
+</body>
+</html>
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
new file mode 100644
--- /dev/null	(date 1639014510585)
+++ b/.idea/workspace.xml	(date 1639014510585)
@@ -0,0 +1,142 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ChangeListManager">
+    <list default="true" id="0a5e2d33-a7ba-4559-9e0e-2276f8ca0f11" name="Changes" comment="TOY_To-Do-List">
+      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/.gradle/7.1.1/dependencies-accessors/dependencies-accessors.lock" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/.gradle/7.1.1/dependencies-accessors/gc.properties" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/.gradle/7.1.1/executionHistory/executionHistory.bin" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/.gradle/7.1.1/executionHistory/executionHistory.lock" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/.gradle/7.1.1/fileChanges/last-build.bin" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/.gradle/7.1.1/fileHashes/fileHashes.bin" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/.gradle/7.1.1/fileHashes/fileHashes.lock" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/.gradle/7.1.1/fileHashes/resourceHashesCache.bin" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/.gradle/7.1.1/gc.properties" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/.gradle/buildOutputCleanup/buildOutputCleanup.lock" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/.gradle/buildOutputCleanup/cache.properties" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/.gradle/buildOutputCleanup/outputFiles.bin" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/.gradle/checksums/checksums.lock" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/.gradle/checksums/md5-checksums.bin" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/.gradle/checksums/sha1-checksums.bin" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/.gradle/vcs-1/gc.properties" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/.idea/.gitignore" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/.idea/compiler.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/.idea/gradle.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/.idea/jarRepositories.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/.idea/libraries-with-intellij-classes.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/.idea/misc.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/.idea/runConfigurations.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/.idea/vcs.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/HELP.md" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/classes/java/main/com/example/restaurant/RestaurantApplication.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/classes/java/main/com/example/restaurant/db/MemoryDbEntity.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/classes/java/main/com/example/restaurant/db/MemoryDbRepositoryAbstract.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/classes/java/main/com/example/restaurant/db/MemoryDbRepositoryIfs.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/classes/java/main/com/example/restaurant/naver/NaverClient$1.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/classes/java/main/com/example/restaurant/naver/NaverClient$2.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/classes/java/main/com/example/restaurant/naver/NaverClient.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/classes/java/main/com/example/restaurant/naver/dto/SearchImageReq.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/classes/java/main/com/example/restaurant/naver/dto/SearchImageRes$SearchImageItem.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/classes/java/main/com/example/restaurant/naver/dto/SearchImageRes.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/classes/java/main/com/example/restaurant/naver/dto/SearchLocalReq.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/classes/java/main/com/example/restaurant/naver/dto/SearchLocalRes$SearchLocalItem.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/classes/java/main/com/example/restaurant/naver/dto/SearchLocalRes.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/classes/java/main/com/example/restaurant/wishlist/entity/WishListEntity.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/classes/java/main/com/example/restaurant/wishlist/repository/WishListRepository.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/classes/java/test/com/example/restaurant/RestaurantApplicationTests.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/classes/java/test/com/example/restaurant/naver/NaverClientTest.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/classes/java/test/com/example/restaurant/wishlist/repository/WishListRepositoryTest.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/reports/tests/test/classes/com.example.restaurant.naver.NaverClientTest.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/reports/tests/test/css/base-style.css" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/reports/tests/test/css/style.css" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/reports/tests/test/index.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/reports/tests/test/js/report.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/reports/tests/test/packages/com.example.restaurant.naver.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/resources/main/application.yaml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/resources/test/application.yaml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/test-results/test/TEST-com.example.restaurant.naver.NaverClientTest.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/test-results/test/binary/output.bin" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/test-results/test/binary/output.bin.idx" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/test-results/test/binary/results.bin" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/tmp/compileJava/previous-compilation-data.bin" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaSpring/스프링입문/restaurant/build/tmp/compileTestJava/previous-compilation-data.bin" afterDir="false" />
+    </list>
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+    <option name="RESET_MODE" value="MIXED" />
+    <option name="ROOT_SYNC" value="DONT_SYNC" />
+  </component>
+  <component name="ProjectId" id="221kdPSos7FxY5EEkDX5po3qNND" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent">
+    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
+    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
+    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
+    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
+    <property name="WebServerToolWindowFactoryState" value="false" />
+    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
+    <property name="nodejs_package_manager_path" value="npm" />
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="0a5e2d33-a7ba-4559-9e0e-2276f8ca0f11" name="Changes" comment="" />
+      <created>1639012567523</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1639012567523</updated>
+      <workItem from="1639012570259" duration="248000" />
+      <workItem from="1639012820799" duration="1478000" />
+      <workItem from="1639014404055" duration="107000" />
+    </task>
+    <task id="LOCAL-00001" summary="TOY_To-Do-List">
+      <created>1639013586599</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1639013586599</updated>
+    </task>
+    <option name="localTasksCounter" value="2" />
+    <servers />
+  </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
+  </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State>
+              <option name="FILTERS">
+                <map>
+                  <entry key="branch">
+                    <value>
+                      <list>
+                        <option value="origin/main" />
+                      </list>
+                    </value>
+                  </entry>
+                </map>
+              </option>
+            </State>
+          </value>
+        </entry>
+      </map>
+    </option>
+    <option name="oldMeFiltersMigrated" value="true" />
+  </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="TOY_To-Do-List" />
+    <option name="LAST_COMMIT_MESSAGE" value="TOY_To-Do-List" />
+  </component>
+</project>
\ No newline at end of file
Index: JavaSpring/스프링입문/restaurant/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JavaSpring/스프링입문/restaurant/.idea/misc.xml b/JavaSpring/스프링입문/restaurant/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1630324342467)
+++ b/JavaSpring/스프링입문/restaurant/.idea/misc.xml	(date 1630324342467)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="FrameworkDetectionExcludesConfiguration">
+    <file type="web" url="file://$PROJECT_DIR$" />
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" project-jdk-name="16" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: JavaSpring/스프링입문/restaurant/.idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JavaSpring/스프링입문/restaurant/.idea/vcs.xml b/JavaSpring/스프링입문/restaurant/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1630324284512)
+++ b/JavaSpring/스프링입문/restaurant/.idea/vcs.xml	(date 1630324284512)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/../../.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: JavaSpring/스프링입문/restaurant/.idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JavaSpring/스프링입문/restaurant/.idea/compiler.xml b/JavaSpring/스프링입문/restaurant/.idea/compiler.xml
new file mode 100644
--- /dev/null	(date 1630324368351)
+++ b/JavaSpring/스프링입문/restaurant/.idea/compiler.xml	(date 1630324368351)
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile name="Gradle Imported" enabled="true">
+        <outputRelativeToContentRoot value="true" />
+        <processorPath useClasspath="false">
+          <entry name="$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.projectlombok/lombok/1.18.20/18bcea7d5df4d49227b4a0743a536208ce4825bb/lombok-1.18.20.jar" />
+        </processorPath>
+        <module name="restaurant.main" />
+      </profile>
+    </annotationProcessing>
+    <bytecodeTargetLevel target="11" />
+  </component>
+</project>
\ No newline at end of file
Index: JavaSpring/스프링입문/restaurant/.gradle/buildOutputCleanup/cache.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/JavaSpring/스프링입문/restaurant/.gradle/buildOutputCleanup/cache.properties b/JavaSpring/스프링입문/restaurant/.gradle/buildOutputCleanup/cache.properties
new file mode 100644
--- /dev/null	(date 1630324299578)
+++ b/JavaSpring/스프링입문/restaurant/.gradle/buildOutputCleanup/cache.properties	(date 1630324299578)
@@ -0,0 +1,2 @@
+#Mon Aug 30 20:51:39 KST 2021
+gradle.version=7.1.1
Index: JavaSpring/스프링입문/restaurant/.idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JavaSpring/스프링입문/restaurant/.idea/.gitignore b/JavaSpring/스프링입문/restaurant/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1630324292018)
+++ b/JavaSpring/스프링입문/restaurant/.idea/.gitignore	(date 1630324292018)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
+# Editor-based HTTP Client requests
+/httpRequests/
Index: JavaSpring/스프링입문/restaurant/HELP.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JavaSpring/스프링입문/restaurant/HELP.md b/JavaSpring/스프링입문/restaurant/HELP.md
new file mode 100644
--- /dev/null	(date 1630324268642)
+++ b/JavaSpring/스프링입문/restaurant/HELP.md	(date 1630324268642)
@@ -0,0 +1,27 @@
+# Getting Started
+
+### Reference Documentation
+
+For further reference, please consider the following sections:
+
+* [Official Gradle documentation](https://docs.gradle.org)
+* [Spring Boot Gradle Plugin Reference Guide](https://docs.spring.io/spring-boot/docs/2.5.4/gradle-plugin/reference/html/)
+* [Create an OCI image](https://docs.spring.io/spring-boot/docs/2.5.4/gradle-plugin/reference/html/#build-image)
+* [Thymeleaf](https://docs.spring.io/spring-boot/docs/2.5.4/reference/htmlsingle/#boot-features-spring-mvc-template-engines)
+* [Spring Web](https://docs.spring.io/spring-boot/docs/2.5.4/reference/htmlsingle/#boot-features-developing-web-applications)
+
+### Guides
+
+The following guides illustrate how to use some features concretely:
+
+* [Handling Form Submission](https://spring.io/guides/gs/handling-form-submission/)
+* [Building a RESTful Web Service](https://spring.io/guides/gs/rest-service/)
+* [Serving Web Content with Spring MVC](https://spring.io/guides/gs/serving-web-content/)
+* [Building REST services with Spring](https://spring.io/guides/tutorials/bookmarks/)
+
+### Additional Links
+
+These additional references should also help you:
+
+* [Gradle Build Scans – insights for your project's build](https://scans.gradle.com#gradle)
+
Index: JavaSpring/스프링입문/restaurant/.idea/runConfigurations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JavaSpring/스프링입문/restaurant/.idea/runConfigurations.xml b/JavaSpring/스프링입문/restaurant/.idea/runConfigurations.xml
new file mode 100644
--- /dev/null	(date 1637038081271)
+++ b/JavaSpring/스프링입문/restaurant/.idea/runConfigurations.xml	(date 1637038081271)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RunConfigurationProducerService">
+    <option name="ignoredProducers">
+      <set>
+        <option value="com.android.tools.idea.compose.preview.runconfiguration.ComposePreviewRunConfigurationProducer" />
+      </set>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: JavaSpring/스프링입문/restaurant/.idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JavaSpring/스프링입문/restaurant/.idea/jarRepositories.xml b/JavaSpring/스프링입문/restaurant/.idea/jarRepositories.xml
new file mode 100644
--- /dev/null	(date 1630324368442)
+++ b/JavaSpring/스프링입문/restaurant/.idea/jarRepositories.xml	(date 1630324368442)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="MavenRepo" />
+      <option name="name" value="MavenRepo" />
+      <option name="url" value="https://repo.maven.apache.org/maven2/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: JavaSpring/스프링입문/restaurant/.idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JavaSpring/스프링입문/restaurant/.idea/gradle.xml b/JavaSpring/스프링입문/restaurant/.idea/gradle.xml
new file mode 100644
--- /dev/null	(date 1637038081257)
+++ b/JavaSpring/스프링입문/restaurant/.idea/gradle.xml	(date 1637038081257)
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="GradleMigrationSettings" migrationVersion="1" />
+  <component name="GradleSettings">
+    <option name="linkedExternalProjectsSettings">
+      <GradleProjectSettings>
+        <option name="distributionType" value="DEFAULT_WRAPPED" />
+        <option name="externalProjectPath" value="$PROJECT_DIR$" />
+        <option name="modules">
+          <set>
+            <option value="$PROJECT_DIR$" />
+          </set>
+        </option>
+      </GradleProjectSettings>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: JavaSpring/스프링입문/restaurant/build/resources/main/application.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JavaSpring/스프링입문/restaurant/build/resources/main/application.yaml b/JavaSpring/스프링입문/restaurant/build/resources/main/application.yaml
new file mode 100644
--- /dev/null	(date 1630328120585)
+++ b/JavaSpring/스프링입문/restaurant/build/resources/main/application.yaml	(date 1630328120585)
@@ -0,0 +1,8 @@
+naver:
+  url:
+    search:
+      local : https://openapi.naver.com/v1/search/local.json
+      image : https://openapi.naver.com/v1/search/image
+  client:
+    id: BKSHZ_NPUv4DB3YH_dNz
+    secret: wPxQlzzAue
Index: JavaSpring/스프링입문/restaurant/.idea/libraries-with-intellij-classes.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JavaSpring/스프링입문/restaurant/.idea/libraries-with-intellij-classes.xml b/JavaSpring/스프링입문/restaurant/.idea/libraries-with-intellij-classes.xml
new file mode 100644
--- /dev/null	(date 1630324368459)
+++ b/JavaSpring/스프링입문/restaurant/.idea/libraries-with-intellij-classes.xml	(date 1630324368459)
@@ -0,0 +1,65 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="libraries-with-intellij-classes">
+    <option name="intellijApiContainingLibraries">
+      <list>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="ideaIU" />
+          <option name="groupId" value="com.jetbrains.intellij.idea" />
+        </LibraryCoordinatesState>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="ideaIU" />
+          <option name="groupId" value="com.jetbrains" />
+        </LibraryCoordinatesState>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="ideaIC" />
+          <option name="groupId" value="com.jetbrains.intellij.idea" />
+        </LibraryCoordinatesState>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="ideaIC" />
+          <option name="groupId" value="com.jetbrains" />
+        </LibraryCoordinatesState>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="pycharmPY" />
+          <option name="groupId" value="com.jetbrains.intellij.pycharm" />
+        </LibraryCoordinatesState>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="pycharmPY" />
+          <option name="groupId" value="com.jetbrains" />
+        </LibraryCoordinatesState>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="pycharmPC" />
+          <option name="groupId" value="com.jetbrains.intellij.pycharm" />
+        </LibraryCoordinatesState>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="pycharmPC" />
+          <option name="groupId" value="com.jetbrains" />
+        </LibraryCoordinatesState>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="clion" />
+          <option name="groupId" value="com.jetbrains.intellij.clion" />
+        </LibraryCoordinatesState>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="clion" />
+          <option name="groupId" value="com.jetbrains" />
+        </LibraryCoordinatesState>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="riderRD" />
+          <option name="groupId" value="com.jetbrains.intellij.rider" />
+        </LibraryCoordinatesState>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="riderRD" />
+          <option name="groupId" value="com.jetbrains" />
+        </LibraryCoordinatesState>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="goland" />
+          <option name="groupId" value="com.jetbrains.intellij.goland" />
+        </LibraryCoordinatesState>
+        <LibraryCoordinatesState>
+          <option name="artifactId" value="goland" />
+          <option name="groupId" value="com.jetbrains" />
+        </LibraryCoordinatesState>
+      </list>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: JavaSpring/스프링입문/restaurant/build/test-results/test/TEST-com.example.restaurant.naver.NaverClientTest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JavaSpring/스프링입문/restaurant/build/test-results/test/TEST-com.example.restaurant.naver.NaverClientTest.xml b/JavaSpring/스프링입문/restaurant/build/test-results/test/TEST-com.example.restaurant.naver.NaverClientTest.xml
new file mode 100644
--- /dev/null	(date 1630328620260)
+++ b/JavaSpring/스프링입문/restaurant/build/test-results/test/TEST-com.example.restaurant.naver.NaverClientTest.xml	(date 1630328620260)
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<testsuite name="com.example.restaurant.naver.NaverClientTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2021-08-30T13:03:38" hostname="YUNs-MacBookPro.local" time="1.374">
+  <properties/>
+  <testcase name="searchImageTest()" classname="com.example.restaurant.naver.NaverClientTest" time="1.374"/>
+  <system-out><![CDATA[22:03:34.651 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
+22:03:34.662 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
+22:03:34.713 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [com.example.restaurant.naver.NaverClientTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
+22:03:34.725 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.restaurant.naver.NaverClientTest], using SpringBootContextLoader
+22:03:34.731 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.example.restaurant.naver.NaverClientTest]: class path resource [com/example/restaurant/naver/NaverClientTest-context.xml] does not exist
+22:03:34.732 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.example.restaurant.naver.NaverClientTest]: class path resource [com/example/restaurant/naver/NaverClientTestContext.groovy] does not exist
+22:03:34.733 [Test worker] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.example.restaurant.naver.NaverClientTest]: no resource found for suffixes {-context.xml, Context.groovy}.
+22:03:34.734 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.restaurant.naver.NaverClientTest]: NaverClientTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
+22:03:34.796 [Test worker] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.example.restaurant.naver.NaverClientTest]
+22:03:34.887 [Test worker] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/Users/yun/Desktop/YUN/FastCampus/JavaSpring/스프링입문/restaurant/build/classes/java/main/com/example/restaurant/RestaurantApplication.class]
+22:03:34.890 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.restaurant.RestaurantApplication for test class com.example.restaurant.naver.NaverClientTest
+22:03:35.036 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [com.example.restaurant.naver.NaverClientTest]: using defaults.
+22:03:35.038 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
+22:03:35.049 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.transaction.TransactionalTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [org/springframework/transaction/interceptor/TransactionAttributeSource]
+22:03:35.050 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [org/springframework/transaction/interceptor/TransactionAttribute]
+22:03:35.050 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@369b8d0c, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6d9a3129, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@716a6b5c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7b9946a8, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1100573a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2daf3f4a, org.springframework.test.context.event.EventPublishingTestExecutionListener@fbd9128, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3ea02a71, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2d0a1318, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@798b2c9c, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1adcd654, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@251094dc, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@58ffc1b5]
+22:03:35.054 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@1c502936 testClass = NaverClientTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369d2457 testClass = NaverClientTest, locations = '{}', classes = '{class com.example.restaurant.RestaurantApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@39779f04, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@29bbdb88, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@33868430, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@812fc18, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5a416503, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@3a43e8db], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].
+22:03:35.105 [Test worker] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
+
+  .   ____          _            __ _ _
+ /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
+( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
+ \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
+  '  |____| .__|_| |_|_| |_\__, | / / / /
+ =========|_|==============|___/=/_/_/_/
+ :: Spring Boot ::                (v2.5.4)
+
+2021-08-30 22:03:35.579  INFO 55435 --- [    Test worker] c.e.restaurant.naver.NaverClientTest     : Starting NaverClientTest using Java 16.0.1 on YUNs-MacBookPro.local with PID 55435 (started by yun in /Users/yun/Desktop/YUN/FastCampus/JavaSpring/스프링입문/restaurant)
+2021-08-30 22:03:35.586  INFO 55435 --- [    Test worker] c.e.restaurant.naver.NaverClientTest     : No active profile set, falling back to default profiles: default
+2021-08-30 22:03:38.760  INFO 55435 --- [    Test worker] c.e.restaurant.naver.NaverClientTest     : Started NaverClientTest in 3.646 seconds (JVM running for 5.271)
+SearchImageRes(lastBuildDate=Mon, 30 Aug 2021 22:03:40 +0900, total=14141, start=1, display=1, items=[SearchImageRes.SearchImageItem(title=여수 맛집 '은행동 갈비집' 연말 모임, 회식 장소로 인기, link=http://imgnews.naver.net/image/5346/2019/12/20/0000146216_002_20191220155406734.jpg, thumbnail=https://search.pstatic.net/common/?src=http://imgnews.naver.net/image/5346/2019/12/20/0000146216_002_20191220155406734.jpg&type=b150, sizeheight=342, sizewidth=600)])
+]]></system-out>
+  <system-err><![CDATA[]]></system-err>
+</testsuite>
Index: JavaSpring/스프링입문/restaurant/build/resources/test/application.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JavaSpring/스프링입문/restaurant/build/resources/test/application.yaml b/JavaSpring/스프링입문/restaurant/build/resources/test/application.yaml
new file mode 100644
--- /dev/null	(date 1630328121162)
+++ b/JavaSpring/스프링입문/restaurant/build/resources/test/application.yaml	(date 1630328121162)
@@ -0,0 +1,8 @@
+naver:
+  url:
+    search:
+      local : https://openapi.naver.com/v1/search/local.json
+      image : https://openapi.naver.com/v1/search/image
+  client:
+    id: BKSHZ_NPUv4DB3YH_dNz
+    secret: wPxQlzzAue
diff --git a/JavaSpring/스프링입문/restaurant/.gradle/vcs-1/gc.properties b/JavaSpring/스프링입문/restaurant/.gradle/vcs-1/gc.properties
new file mode 100644
diff --git a/JavaSpring/스프링입문/restaurant/.gradle/7.1.1/dependencies-accessors/gc.properties b/JavaSpring/스프링입문/restaurant/.gradle/7.1.1/dependencies-accessors/gc.properties
new file mode 100644
diff --git a/JavaSpring/스프링입문/restaurant/.gradle/7.1.1/gc.properties b/JavaSpring/스프링입문/restaurant/.gradle/7.1.1/gc.properties
new file mode 100644
